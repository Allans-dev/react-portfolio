{"version":3,"sources":["serviceWorker.js","components/Header.jsx","components/Home.jsx","containers/Projects/ProjectCard.jsx","project-data.js","particle-params.js","containers/Projects/index.jsx","components/Modal.jsx","components/Experience.jsx","containers/Social.jsx","components/Main.jsx","App.jsx","index.jsx"],"names":["Boolean","window","location","hostname","match","Header","props","state","showMenu","toggleMenu","bind","event","preventDefault","this","element","outsideClickListener","elem","contains","target","offsetWidth","offsetHeight","getClientRects","length","document","getElementById","classList","remove","removeClickListener","removeEventListener","addEventListener","hideOnClickOutside","toggle","setState","className","Link","to","linkEnvCheck","id","onClick","Component","Home","ProjectCard","title","iframeSrc","description","github","site","console","log","alt","src","href","rel","size","projectData","website","Projects","params","Object","keys","map","item","key","Modal","handleClose","show","children","toggleClassName","Experience","hideModal","Social","Main","Switch","Route","exact","path","process","component","App","ReactDOM","render","BrowserRouter","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6b0a74db.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport '../style/header-styles.scss';\n\n  function hideOnClickOutside(element) {\n    const isVisible = elem => !!elem && !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );\n    const outsideClickListener = event => {\n        if (!element.contains(event.target) && isVisible(element)) {\n          document.getElementById(\"mobile-menu\").classList.remove(\"active\");\n          document.getElementById('menu-container').classList.remove('change');\n          removeClickListener()\n        }\n    }\n\n    const removeClickListener = () => {\n        document.removeEventListener('click', outsideClickListener)\n    }\n\n    document.addEventListener('click', outsideClickListener)\n  }\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleMenu = this.toggleMenu.bind(this);\n    // this.hideOnClickOutside = this.hideOnClickOutside.bind(this);\n  }\n\n  state = { showMenu: false };\n\n  linkEnvCheck() {\n    if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n      return '/';\n    }\n    return '/react-portfolio/';\n  }\n\n  toggleMenu(event) {\n    event.preventDefault();\n\n    const showMenu = this.state;\n\n    const mobile = document.getElementById('menu-container');\n    hideOnClickOutside(mobile);\n\n    if (showMenu === false) {\n      document.getElementById('menu-container').classList.toggle('change');\n      document.getElementById(\"mobile-menu\").classList.toggle(\"active\");\n      this.setState({ showMenu: true });\n    } else if (showMenu) {\n      document.getElementById('menu-container').classList.toggle('change');\n      document.getElementById(\"mobile-menu\").classList.toggle(\"active\");\n      this.setState({ showMenu: false });\n    }\n\n    \n  }\n\n  render() {\n    return (\n      <header>\n        <nav className=\"header-home-btn\">\n          <Link to={this.linkEnvCheck()} className=\"header-btn\">home</Link>\n        </nav>\n        <nav className=\"nav-btns\">\n          <Link to={`${this.linkEnvCheck()}experience`} className=\"header-btn\">experience</Link>\n          <Link to={`${this.linkEnvCheck()}projects`} className=\"header-btn\">projects</Link>\n          <Link to={`${this.linkEnvCheck()}social`} className=\"header-btn\">social</Link>\n        </nav>\n        <div id=\"menu-container\" onClick={this.toggleMenu}>\n          <div className=\"bar1\" />\n          <div className=\"bar2\" />\n          <div className=\"bar3\" />\n        </div>\n        <nav id=\"mobile-menu\">\n          <ul>\n            <li><Link to={`${this.linkEnvCheck()}experience`} className=\"mobile-header-btn\">experience</Link></li>\n            <li><Link to={`${this.linkEnvCheck()}projects`} className=\"mobile-header-btn\">projects</Link></li>\n            <li><Link to={`${this.linkEnvCheck()}social`} className=\"mobile-header-btn\">social</Link></li>\n          </ul>\n        </nav>\n      </header>\n    );\n  }\n}\n\n\nexport default Header;\n","import React from 'react';\n\nimport '../style/home-styles.scss';\n\nconst Home = () => (\n  <section className=\"home\">\n    <h1 className=\"title\">Welcome to code.allan</h1>\n  </section>\n);\n\nexport default Home;\n","/* eslint-disable react/prop-types */\n/* eslint-disable no-console */\nimport React from 'react';\n\nimport '../../style/projects-styles.scss';\n\nconst ProjectCard = (props) => {\n  const {\n    title,\n    iframeSrc,\n    description,\n    github,\n    site,\n  } = props;\n  console.log(props);\n\n  return (\n    <article className=\"project-card\">\n      <section>\n        <h2>{title}</h2>\n        <div className=\"card-iframe\">\n          <iframe\n            title={title}\n            alt=\"iframe for project website\"\n            src={iframeSrc}\n          />\n        </div>\n        <p>\n          {description}\n        </p>\n        <div className=\"project-btns\">\n          <a href={github} target=\"_blank\" rel=\"noopener noreferrer\" size=\"medium\">Github</a>\n          <a href={site} target=\"_blank\" rel=\"noopener noreferrer\" size=\"medium\">Go to site</a>\n        </div>\n      </section>\n    </article>\n  );\n};\n\nexport default ProjectCard;\n","const projectData = {\n  // 'Redux Weather':{\n  //   description: 'React-Redux weather app showing weather forecast around the world at noon.',\n  //   website: 'https://allancheung.com/reactWeather',\n  //   github:'https://github.com/Allans-dev/ReactReduxWeather'\n  // },\n  // 'React Router Demo':{\n  //   description:'nb. the purple buttons show router demo. Real planet data.',\n  //   website:'https://allancheung.com/realuniverse',\n  //   github:'https://github.com/Allans-dev/realUniverse',\n  // },  \n  'Web Site':{\n    description:'Responsive website showing responsive CSS including side nav and slide swiper.',\n    website:'https://practice-web.herokuapp.com/',\n    github:'https://github.com/Allans-dev/responsiveTest',\n  },  \n  // 'Tic Tac Toe':{\n  //   description:'tic tac toe using jQuery',\n  //   website:'https://allancheung.com/tictactoe',\n  //   github:'https://github.com/Allans-dev/Tic-Tac-Toe',\n  // },  \n  // 'Simon Game':{\n  //   description:'Simon memory game made in vanilla JS. Please press ON then START.',\n  //   website:'https://allancheung.com/simon',\n  //   github:'https://github.com/Allans-dev/Simon-Game',\n  // },  \n  // 'Wiki searcher':{\n  //   description:'Search using Wikipedia API',\n  //   website:'https://allancheung.com/wiki',\n  //   github:'https://github.com/Allans-dev/Wikipedia-Viewer',\n  // },\n    'Planets':{\n      description: 'Typescript React Planetary data display',\n      website: 'https://allans-dev.github.io/real-universe',\n      github: 'https://github.com/Allans-dev/real-universe',\n    }\n}\n\nexport default projectData;","export default {\n  \"particles\": {\n      \"number\": {\n          \"value\": 160,\n          \"density\": {\n              \"enable\": false\n          }\n      },\n      \"size\": {\n          \"value\": 3,\n          \"random\": true,\n          \"anim\": {\n              \"speed\": 4,\n              \"size_min\": 0.3\n          }\n      },\n      \"line_linked\": {\n          \"enable\": false\n      },\n      \"move\": {\n          \"random\": true,\n          \"speed\": 1,\n          \"direction\": \"top\",\n          \"out_mode\": \"out\"\n      }\n  },\n  \"interactivity\": {\n      \"events\": {\n          \"onhover\": {\n              \"enable\": true,\n              \"mode\": \"bubble\"\n          },\n          \"onclick\": {\n              \"enable\": true,\n              \"mode\": \"repulse\"\n          }\n      },\n      \"modes\": {\n          \"bubble\": {\n              \"distance\": 250,\n              \"duration\": 2,\n              \"size\": 0,\n              \"opacity\": 0\n          },\n          \"repulse\": {\n              \"distance\": 300,\n              \"duration\": 4\n          }\n      }\n  }\n}","import React from 'react';\nimport Particles from 'react-particles-js';\nimport ProjectCard from './ProjectCard';\nimport projectData from '../../project-data';\nimport '../../style/projects-styles.scss';\nimport params from '../../particle-params';\n\nconst cardTitle = () => Object.keys(projectData);\n\nconst Projects = () => (\n  <article className=\"projects\">\n    <Particles className=\"particles\" params={params} />\n    <section className=\"card-container\">\n      {cardTitle().map(item => (\n        <ProjectCard\n          key={item}\n          iframeSrc={projectData[item].website}\n          title={item}\n          description={projectData[item].description}\n          site={projectData[item].website}\n          github={projectData[item].github}\n        />\n      ))}\n    </section>\n  </article>\n);\nexport default Projects;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { Button } from '@material-ui/core';\nimport '../style/modal-styles.scss';\n\nconst Modal = ({ handleClose, show, children }) => {\n  const toggleClassName = show ? 'modal display-block' : 'modal display-none';\n  return (\n    <div className={toggleClassName}>\n      <section className=\"modal-main\">\n        {children}\n        <Button onClick={handleClose}>close</Button>\n      </section>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\n// import { Button } from '@material-ui/core';\nimport Modal from './Modal';\nimport '../style/experience-styles.scss';\n\n\nimport params from '../particle-params';\n\nclass Experience extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { show: false };\n  }\n\n  showModal() {\n    this.setState({ show: true });\n  }\n\n  hideModal() {\n    this.setState({ show: false });\n  }\n\n  render() {\n    const { show } = this.state;\n    return (\n      <section className=\"experience\">\n        <Particles className=\"particles\" params={params} />\n        <div className=\"table-container\">\n          <div className=\"cell exp\">\n            <h2>Experience</h2>\n            <ul>\n              <li>\n                <p>Junior Full Stack Web Developer, BirdBrain 2018 (4 months)</p>\n                <p>Developing in HTML, CSS,JavaScript, ReactJS, PHP and WordPress</p>\n              </li>\n            </ul>\n          </div>\n          <div className=\"cell edu\">\n            <h2>Programming</h2>\n            <ul>\n              <li>Certificate IV Programming, TAFE 2019</li>\n              {// eslint-disable-next-line react/no-unescaped-entities\n                <li>Free Code Camp's Front End Certificate 2017</li>\n}\n              {// eslint-disable-next-line react/no-unescaped-entities\n                <li>Free Code Camp's Algorthms and Data Structures Certificate</li>\n}\n            </ul>\n          </div>\n          <div className=\"cell extra\">\n            <h2>Extra-Curricular</h2>\n            <ul>\n              <li>Free Code Camp - Top Contributor 2018 - hosting a study group</li>\n              <li>Volunteer at 2019 IoT Impact Conference</li>\n              <li>Volunteer helper at Muses Code React Workshop 2018</li>\n            </ul>\n          </div>\n          <div className=\"cell back\">\n            <h2>Property Economics Background</h2>\n            <ul>\n              <li>Assistant Compliance Officer, Whelan Property Group 2016 </li>\n              <li>Resident Assistant, Urbanest 2014</li>\n              <li>B. Property Economics, University of Technology Sydney 2016</li>\n              <li>International Business, Berlin University of Social Sciences 2015</li>\n            </ul>\n            {/* <Button type=\"button\" onClick={this.showModal}>\n              Open\n            </Button> */}\n          </div>\n        </div>\n        <Modal show={show} handleClose={this.hideModal} />\n      </section>\n    );\n  }\n}\n\nexport default Experience;\n","import React from 'react';\n\nimport '../style/social-styles.scss';\n\nconst Social = () => (\n  <section className=\"social\">\n    <div className=\"icon-container\">\n      <a href=\"https://www.linkedin.com/in/allan-cheung-web/\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fa fa-linkedin\" /></a>\n      <a href=\"https://github.com/Allans-dev\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fa fa-github\" /></a>\n      <a href=\"https://www.freecodecamp.org/allans-dev\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fa fa-free-code-camp\" /></a>\n      <a href=\"https://www.instagram.com/al_che9/\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fa fa-instagram\" /></a>\n    </div>\n    <div className=\"social-title\">\n        Social Media\n    </div>\n  </section>\n);\n\nexport default Social;\n","import React from 'react';\nimport { Switch, Route } from 'react-router';\n\nimport Home from './Home';\nimport Projects from '../containers/Projects';\nimport Experience from './Experience';\nimport Social from '../containers/Social';\n\nfunction envCheck() {\n  if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n    return '/';\n  }\n  return process.env.PUBLIC_URL;\n}\n\n// if (routesEqual && forceRefresh) {\n//   router.push({ pathname: '/empty' });\n//   router.replace({ pathname: '/route-to-refresh' });\n// }\n\nconst Main = () => (\n  <main>\n    <Switch>\n      <Route exact path={`${envCheck()}/`} component={Home} />\n      <Route path={`${envCheck()}/experience`} component={Experience} />\n      <Route path={`${envCheck()}/projects`} component={Projects} />\n      <Route path={`${envCheck()}/social`} component={Social} />\n    </Switch>\n  </main>\n);\n\nexport default Main;\n","import React from 'react';\nimport Particles from 'react-particles-js';\nimport Header from './components/Header';\nimport Main from './components/Main';\n\n\nimport params from './particle-params';\n\nimport './style/App.scss';\n\nconst App = () => (\n  <div className=\"App\">\n    <Header />\n    <Particles className=\"particles\" params={params} />\n    <Main />\n  </div>\n);\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  // eslint-disable-next-line no-undef\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}